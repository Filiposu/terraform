buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}


plugins {
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyVersion"
    id 'java'
}

group = 'az.ibar.ms'

repositories {
    mavenCentral()
}

version = "$projectVersion"
sourceCompatibility = "$sourceCompatibility"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    options.compilerArgs += "-Amapstruct.defaultComponentModel=spring"
    options.compilerArgs += "-Amapstruct.unmappedTargetPolicy=ERROR"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.5.0'
    implementation "org.springframework.boot:spring-boot-starter-validation:$validationVersion"
    implementation "net.logstash.logback:logstash-logback-encoder:$logbackEncoderVersion"
    implementation 'ch.qos.logback:logback-classic'
    implementation "junit:junit:$junitVersion"

    // Lib for creating mapper classes at compile time
    implementation group: 'org.mapstruct', name: 'mapstruct', version: "$mapstructVersion"
    implementation 'org.jetbrains:annotations:19.0.0'
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: "$mapstructProcessorVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"

    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: "$jaxbVersion"

    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'


    implementation group: 'org.modelmapper', name: 'modelmapper', version: "$modelMapper"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: "$starterSleuthVersion"
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: "$starterOpenFeign"

    implementation "org.apache.commons:commons-lang3:${apacheCommonVersion}"

    implementation "io.github.openfeign:feign-okhttp:$okHttpVersion"
    implementation "io.github.openfeign:feign-gson:$gsonVersion"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: "$powerMockVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${releaseTrainVersion}"
    }
}

// Configure the spring boot jar
springBoot {
    buildInfo()
}

bootJar {
    archiveName 'app.jar'
}