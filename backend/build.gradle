buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}


plugins {
    id 'org.springframework.boot' version "2.3.4.RELEASE"
    id 'io.spring.dependency-management' version "1.0.10.RELEASE"
    id 'java'
}

group = 'az.ibar.ms'

repositories {
    mavenCentral()
}

version = "$projectVersion"
sourceCompatibility = "$sourceCompatibility"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    options.compilerArgs += "-Amapstruct.defaultComponentModel=spring"
    options.compilerArgs += "-Amapstruct.unmappedTargetPolicy=ERROR"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: '2.5.0'
    implementation "org.springframework.boot:spring-boot-starter-validation:$validationVersion"
    implementation "net.logstash.logback:logstash-logback-encoder:$logbackEncoderVersion"
    implementation 'ch.qos.logback:logback-classic'
    // Lib for creating mapper classes at compile time
    implementation 'org.jetbrains:annotations:19.0.0'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: "$jaxbVersion"
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: "$modelMapper"
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: "$starterOpenFeign"
    implementation "org.apache.commons:commons-lang3:${apacheCommonVersion}"
    implementation "io.github.openfeign:feign-okhttp:$okHttpVersion"
    implementation "io.github.openfeign:feign-gson:$gsonVersion"

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${releaseTrainVersion}"
    }
}

// Configure the spring boot jar
springBoot {
    buildInfo()
}

bootJar {
    archiveName 'app.jar'
}