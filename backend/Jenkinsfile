pipeline {
    agent any
    
    environment {
		DOCKERHUB_CREDENTIALS=credentials('docker-cred')
		YOUR_DOCKERHUB_USERNAME="filibuster"
        SERVICE_NAME = "backend-app-service"
        REPOSITORY_TAG="${YOUR_DOCKERHUB_USERNAME}/${SERVICE_NAME}:${BUILD_ID}"
        MS_NAME="phonebook-backend"
	}
    
    stages {
        stage('Build & tests ') {
            steps {
                echo 'Building..'
                sh "./backend/gradlew build --no-daemon"
                sh "./backend/gradlew tasks "
				echo 'Start unit testing with gradle...'
                sh "./backend/gradlew test"
            }
        }
        
        stage('Sonarqube') {
            steps {
               withSonarQubeEnv('Sonarqube') {
                    sh './backend/gradlew --info sonarqube -Dsonar.host.url=sonarqube-service:9000 -Dsonar.projectKey=$MS_NAME -Dsonar.projectName=$MS_NAME -Dsonar.java.binaries=./ --debug --stacktrace'
                 }
            }
        }
        stage('Build docker image') {
            steps {
                sh 'docker build --file backend/Dockerfile -t ${REPOSITORY_TAG} backend/'
            }
        }
        stage('Login to DockerHub') {
			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}
        stage('Push docker image to registry') {
            steps {
                sh 'docker push ${REPOSITORY_TAG}'
            }
        }
         stage('Deploy to Cluster') {
          steps {
                sh 'envsubst < ${WORKSPACE}/backend/deploy.yaml | kubectl apply -f -'
            }
        }
    }
}
